package com.sino.soa.mis.srv.vendor.srv;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import com.sino.base.dto.DTOSet;
import com.sino.base.util.StrUtil;
import com.sino.base.exception.CalendarException;
import com.sino.soa.common.SrvReturnMessage;
import com.sino.soa.util.XMLGregorianCalendarUtil;
import com.sino.soa.mis.srv.vendor.dto.SrvVendorInfoDTO;
import com.sino.soa.mis.eip.sc.po.sb_sc_po_inquiryvendorinfosrv.msgheader.MsgHeader;
import com.sino.soa.mis.eip.sc.po.sb_sc_po_inquiryvendorinfosrv.InquiryVendorInfoSrvOutputItem;
import com.sino.soa.mis.eip.sc.po.sb_sc_po_inquiryvendorinfosrv.InquiryVendorInfoSrvRequest;
import com.sino.soa.mis.eip.sc.po.sb_sc_po_inquiryvendorinfosrv.InquiryVendorInfoSrvResponse;
import com.sino.soa.mis.eip.sc.po.sb_sc_po_inquiryvendorinfosrv.SBSCPOInquiryVendorInfoSrv;
import com.sino.soa.mis.eip.sc.po.sb_sc_po_inquiryvendorinfosrv.SBSCPOInquiryVendorInfoSrv_Service;

import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.datatype.DatatypeConfigurationException;
import javax.xml.namespace.QName;
import java.net.URL;
import java.util.List;

/**
 * This class was generated by Apache CXF 2.1.4
 * Tue May 05 09:21:39 CST 2009
 * Generated source version: 2.1.4
 * @author wangzhipeng
 * date:2011-09-08
 * DSC:供应商信息接口实现
 */

public final class InquiryVendorInfoSrv {
    private SrvReturnMessage returnMessage = new SrvReturnMessage();
    private DTOSet ds = new DTOSet();
    private String vendorNumber = "";
    private String vendorName = "";
    private String vendorTypeDisp = "";
    private String vendorNameAlt = "";
    private String vatFlag = "";
    private String lastUpdateDate = "";  //最后更新开始日期
    private static final QName SERVICE_NAME = new QName("http://xmlns.oracle.com/SB_SC_PO_InquiryVendorInfoSrv", "SB_SC_PO_InquiryVendorInfoSrv");
    
    public InquiryVendorInfoSrv() {
    }

    public void excute() throws Exception {
        URL wsdlURL = SBSCPOInquiryVendorInfoSrv_Service.WSDL_LOCATION;

        SBSCPOInquiryVendorInfoSrv_Service ss = new SBSCPOInquiryVendorInfoSrv_Service(wsdlURL, SERVICE_NAME);
        SBSCPOInquiryVendorInfoSrv port = ss.getSBSCPOInquiryVendorInfoSrvPort();

        {
            System.out.println("SB_SC_PO_InquiryVendorInfoSrv Invoking process...");
            InquiryVendorInfoSrvRequest _process_payload = null;
            _process_payload = new InquiryVendorInfoSrvRequest();
            MsgHeader msgHeader = new MsgHeader();
            _process_payload.setVENDORNUMBER(vendorNumber); 
            _process_payload.setVENDORNAME(vendorName);
            _process_payload.setVENDORTYPEDISP(vendorTypeDisp);
            _process_payload.setVALIDFLAG(vatFlag);
            _process_payload.setSTARTLASTUPDATEDATE(getLastUpdateDate());
            _process_payload.setMsgHeader(msgHeader);
            InquiryVendorInfoSrvResponse _process__return = port.process(_process_payload);
            System.out.println("process.result=" + "=" + _process__return.getErrorFlag() + "||" + _process__return.getErrorMessage());
            returnMessage.setErrorFlag(StrUtil.nullToString(_process__return.getErrorFlag()));
            returnMessage.setErrorMessage(_process__return.getErrorMessage());
            if (returnMessage.getErrorFlag().equalsIgnoreCase("Y")) {
                List<InquiryVendorInfoSrvOutputItem> items = _process__return.getInquiryVendorInfoSrvOutputCollection().getInquiryVendorInfoSrvOutputItem();
                for (int i = 0; i < items.size(); i++) {
                    InquiryVendorInfoSrvOutputItem item = items.get(i);
                    SrvVendorInfoDTO srvVendorInfoDTO = new SrvVendorInfoDTO();
                    srvVendorInfoDTO.setVendorName(item.getVENDORNAME());
                    srvVendorInfoDTO.setVendorNameAlt(item.getVENDORNAMEALT());
                    srvVendorInfoDTO.setVendorNumber(item.getVENDORNUMBER());
                    srvVendorInfoDTO.setVatFlag(item.getVATFLAG());
                    srvVendorInfoDTO.setCreatedBy(item.getCREATEDBY().toString());
                    srvVendorInfoDTO.setVendorCreationDate(XMLGregorianCalendarUtil.getSimpleCalendarString(item.getVENDORCREATIONDATE()));
                    srvVendorInfoDTO.setVendorTypeDisp(item.getVENDORTYPEDISP());
                    srvVendorInfoDTO.setLastUpdateDate(XMLGregorianCalendarUtil.getSimpleCalendarString(item.getLASTUPDATEDATE()));
                    ds.addDTO(srvVendorInfoDTO);
                }

            }
        }

    }


    /**
     * @return the returnMessage
     */
    public SrvReturnMessage getReturnMessage() {
        return returnMessage;
    }

    /**
     * @param returnMessage the returnMessage to set
     */
    public void setReturnMessage(SrvReturnMessage returnMessage) {
        this.returnMessage = returnMessage;
    }

    /**
     * @return the ds
     */
    public DTOSet getDs() {
        return ds;
    }

    /**
     * @param ds the ds to set
     */
    public void setDs(DTOSet ds) {
        this.ds = ds;
    }

    /**
     * @return the vendorNumber
     */
    public String getVendorNumber() {
        return vendorNumber;
    }

    /**
     * @param vendorNumber the vendorNumber to set
     */
    public void setVendorNumber(String vendorNumber) {
        this.vendorNumber = vendorNumber;
    }

    /**
     * @return the vendorName
     */
    public String getVendorName() {
        return vendorName;
    }

    /**
     * @param vendorName the vendorName to set
     */
    public void setVendorName(String vendorName) {
        this.vendorName = vendorName;
    }

    /**
     * @return the vendorTypeDisp
     */
    public String getVendorTypeDisp() {
        return vendorTypeDisp;
    }

    /**
     * @param vendorTypeDisp the vendorTypeDisp to set
     */
    public void setVendorTypeDisp(String vendorTypeDisp) {
        this.vendorTypeDisp = vendorTypeDisp;
    }

    /**
     * @return the vendorNameAlt
     */
    public String getVendorNameAlt() {
        return vendorNameAlt;
    }

    /**
     * @param vendorNameAlt the vendorNameAlt to set
     */
    public void setVendorNameAlt(String vendorNameAlt) {
        this.vendorNameAlt = vendorNameAlt;
    }

    /**
     * @return the vatFlag
     */
    public String getVatFlag() {
        return vatFlag;
    }

    /**
     * @param vatFlag the vatFlag to set
     */
    public void setVatFlag(String vatFlag) {
        this.vatFlag = vatFlag;
    }

    /**
     * @return the lastUpdateDate
     */
    public XMLGregorianCalendar getLastUpdateDate() throws CalendarException, DatatypeConfigurationException {
        return XMLGregorianCalendarUtil.getXMLGregorianCalendar(this.lastUpdateDate);
    }

    /**
     * @param lastUpdateDate the lastUpdateDate to set
     */
    public void setLastUpdateDate(String lastUpdateDate) {
        this.lastUpdateDate = lastUpdateDate;
    }

    public String toString(){
        String s = null;
        for (int i = 0; i < ds.getSize(); i++) {
        	SrvVendorInfoDTO dto = (SrvVendorInfoDTO) ds.getDTO(i);  
            s += "dto:" + dto.getVendorTypeLookupCode() + "  " +dto.getVendorTypeDisp() + "  "+ dto.getVendorName() + " " + dto.getVendorTypeDisp() +"\n";
        }
		return s;
    }
    
    public static void main(String[] args) throws Exception {
        InquiryVendorInfoSrv srv = new InquiryVendorInfoSrv();
        srv.setVendorNumber("2680");
        srv.setVendorName("E41000002-李贵桢");
        srv.setLastUpdateDate("2008-12-02");
        srv.excute();

        System.out.println(srv.toString());
    }

}